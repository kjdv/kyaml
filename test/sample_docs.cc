#include "sample_docs.hh"

const std::string kyaml::test::g_oz_yaml =
  "---\n"
  "receipt:     Oz-Ware Purchase Invoice\n"
  "date:        2012-08-06\n"
  "customer:\n"
  "    given:   Dorothy\n"
  "    family:  Gale\n"
  "\n"
  "items:\n"
  "    - part_no:   A4786\n"
  "      descrip:   Water Bucket (Filled)\n"
  "      price:     1.47\n"
  "      quantity:  4\n"
  "\n"
  "    - part_no:   E1628\n"
  "      descrip:   High Heeled \"Ruby\" Slippers\n"
  "      size:      8\n"
  "      price:     100.27\n"
  "      quantity:  1\n"
  "\n"
  "bill-to:  &id001\n"
  "    street: |\n"
  "            123 Tornado Alley\n"
  "            Suite 16\n"
  "    city:   East Centerville\n"
  "    state:  FL\n"
  "\n"
  "ship-to:  *id001\n"
  "\n"
  "specialDelivery:  >\n"
  "    Follow the Yellow Brick\n"
  "    Road to the Emerald City.\n"
  "    Pay no attention to the\n"
  "    man behind the curtain.\n"
  "...\n";

const std::string kyaml::test::g_anchors_yaml =
  "# sequencer protocols for Laser eye surgery\n"
  "---\n"
  "- step:  &id001                  # defines anchor label &id001\n"
  "    instrument:      Lasik 2000\n"
  "    pulseEnergy:     5.4\n"
  "    pulseDuration:   12\n"
  "    repetition:      1000\n"
  "    spotSize:        1mm\n"
  "\n"
  "- step: &id002\n"
  "    instrument:      Lasik 2000\n"
  "    pulseEnergy:     5.0\n"
  "    pulseDuration:   10\n"
  "    repetition:      500\n"
  "    spotSize:        2mm\n"
  "\n"
  "- step: *id001                   # refers to the first step (with anchor &id001)\n"
  "- step: *id002                   # refers to the second step\n"
  "- step: *id001\n"
  "- step: *id002\n";

const std::string kyaml::test::g_datatypes_yaml =
  "integer: 1\n"
  "string: \"123\"\n"
  "float: 3.14\n"
  "explicit_float: !!float 123\n"
  "explicit_string: !!str 123\n"
  "simple_string: a string\n"
  "bool_yes: Yes\n"
  "bool_no: No\n"
  "binary: !!binary |\n"
  "  VGhpcyBpcyBhIHNhbXBsZSB\n"
  "  zdHJpbmcgdGhhdCB3aWxsIG\n"
  "  JlIGJhc2U2NCBlbmNvZGVkL\n"
  "  g==\n";

const std::string kyaml::test::g_chomp_yaml =
  "---\n"
  "stripped: |-\n"
  "  The final line\n"
  "  break should be\n"
  "  stripped.\n"
  "\n"
  "clipped: |\n"
  "  The final line\n"
  "  break should be\n"
  "  clipped.\n"
  "\n"
  "keep: |+\n"
  "  The final line\n"
  "  break should be\n"
  "  kept.\n"
  "\n"
  "stripped as space: >-\n"
  "  This should\n"
  "  only have\n"
  "  spaces.\n"
  "\n"
  "...\n";

const std::string kyaml::test::g_multi_yaml =
  "# multiple documents in one stream\n"
  "\n"
  "bare document\n"
  "\n"
  "...\n"
  "%YAML 1.2\n"
  "---\n"
  "# with directive\n"
  "sequence:\n"
  "  - item 1\n"
  "  - item 2\n"
  "\n"
  "---\n"
  "# no closing thingy\n"
 // "\n"
  "mapping:\n"
  "  key1: value 1\n"
  "  key2: value 2\n"
  "\n"
  "# eof\n";

const std::string kyaml::test::g_unhappy_stream_yaml =
  "# multiple documents with errors\n"
  "\n"
  "var: 'unclosed quote\n"
  "\n"
  "... # comment\n" // line 5
  "---\n"
  "# eos 1\n"
  "#empty will be skipped\n"
  "---\n"
  "# the previous document was empty\n" // line 10
  "# this has an unvalues string literal\n"
  "string: |\n"
  "...\n"
  "---\n"
  "# eos 2\n" // line 15
  "# unbalanced sequence\n"
  "[one [two] three\n"
  "...\n"
  "---\n"
  "# eos 3\n" // line 20
  "# invalid indent\n"
  "indent:\n"
  "  - toplevel 1\n"
  "  - toplevel 2\n"
  " - lower level\n" // line 25
  "---\n"
  "# eos 4\n";
